ule win_abaddon_pos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2018-11-23"
        version = "1"
        description = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator 0.1a"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.abaddon_pos"
        malpedia_version = "20180607"
        malpedia_license = "CC BY-NC-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using yara-signator.
     * The code and documentation / approach will be published in the near future here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */

    strings:
        $sequence_0 = { b20a f6f2 80fc00 7406 }
            // n = 4, score = 2000
            //   b20a                 | mov                 dl, 0xa
            //   f6f2                 | div                 dl
            //   80fc00               | cmp                 ah, 0
            //   7406                 | je                  0x401502

        $sequence_1 = { 80fc00 7406 b00a 28e0 }
            // n = 4, score = 2000
            //   80fc00               | cmp                 ah, 0
            //   7406                 | je                  0x401502
            //   b00a                 | mov                 al, 0xa
            //   28e0                 | sub                 al, ah

        $sequence_2 = { b00a 28e0 88c4 80c430 }
            // n = 4, score = 2000
            //   b00a                 | mov                 al, 0xa
            //   28e0                 | sub                 al, ah
            //   88c4                 | mov                 ah, al
            //   80c430               | add                 ah, 0x30

        $sequence_3 = { 7603 83e809 ba00000000 eb05 }
            // n = 4, score = 2000
            //   7603                 | jbe                 0x4014cd
            //   83e809               | sub                 eax, 9
            //   ba00000000           | mov                 edx, 0
            //   eb05                 | jmp                 0x4014d9

        $sequence_4 = { 7512 6bc002 83f809 7603 }
            // n = 4, score = 2000
            //   7512                 | jne                 0x4014d4
            //   6bc002               | imul                eax, eax, 2
            //   83f809               | cmp                 eax, 9
            //   7603                 | jbe                 0x4014cd

        $sequence_5 = { b400 b20a f6f2 80fc00 }
            // n = 4, score = 2000
            //   b400                 | mov                 ah, 0
            //   b20a                 | mov                 dl, 0xa
            //   f6f2                 | div                 dl
            //   80fc00               | cmp                 ah, 0

        $sequence_6 = { f6f2 80fc00 7406 b00a }
            // n = 4, score = 2000
            //   f6f2                 | div                 dl
            //   80fc00               | cmp                 ah, 0
            //   7406                 | je                  0x401502
            //   b00a                 | mov                 al, 0xa

        $sequence_7 = { 7413 803b34 740e 803b35 }
            // n = 4, score = 2000
            //   7413                 | je                  0x4011c1
            //   803b34               | cmp                 byte ptr [ebx], 0x34
            //   740e                 | je                  0x4011c1
            //   803b35               | cmp                 byte ptr [ebx], 0x35

        $sequence_8 = { 6bc002 83f809 7603 83e809 }
            // n = 4, score = 2000
            //   6bc002               | imul                eax, eax, 2
            //   83f809               | cmp                 eax, 9
            //   7603                 | jbe                 0x4014cd
            //   83e809               | sub                 eax, 9

        $sequence_9 = { 2c30 83fa01 7512 6bc002 }
            // n = 4, score = 2000
            //   2c30                 | sub                 al, 0x30
            //   83fa01               | cmp                 edx, 1
            //   7512                 | jne                 0x4014d4
            //   6bc002               | imul                eax, eax, 2

    condition:
        7 of them
}
rule win_abaddon_pos_w0 {
    meta:
        author = "Darien Huss, Proofpoint"
        description = "AbaddonPOS"
        reference = "md5,317f9c57f7983e2608d5b2f00db954ff"
        malpedia_version = "20180322"
        malpedia_license = "CC BY-NC-SA 4.0"
        malpedia_sharing = "TLP:WHITE"
    strings:
        $s1 = "devil_host" fullword ascii
        $s2 = "Chrome" fullword ascii
        $s3 = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" fullword ascii
        $i1 = { 31 ?? 81 ?? 55 89 E5 8B 74 }
    condition:
        all of ($s*) or $i1
}